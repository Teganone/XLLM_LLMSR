# Declarations
persons = EnumSort([A, B, C, D, P])
seats = EnumSort([seatA, seatB, seatC, seatD, seatF])
sits_in = Function([persons] -> [seats])

# Constraints
Distinct([p: persons], sits_in(p)) ::: (Each person occupies a distinct seat)
Implies(Or(sits_in(A) == seatC, sits_in(B) == seatC), sits_in(C) == seatB) ::: (1) If one of A or B is sitting in Block C, then C is sitting in Block B
Implies(sits_in(P) == seatC, sits_in(D) == seatF) ::: (2) If Peng (P) is sitting in Block C, then D is sitting in Block F
sits_in(D) == seatB ::: (Assumption: Ding (D) sits in Block B)

# Verifications
is_deduced(sits_in(D) == seatB, Not(sits_in(A) == seatC)) ::: (1) A is not sitting in Block C
is_deduced(sits_in(D) == seatB, sits_in(A) == seatA) ::: (2) A must be sitting in Block A