# Declarations
materials = EnumSort([T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30])
financial = Function([materials] -> [bool])
english = Function([materials] -> [bool])
us_import = Function([materials] -> [bool])

# Constraints
Count([m:materials], True) == 30 ::: (1) Total teaching materials count
Count([m:materials], financial(m) == True) == 12 ::: (2) 12 are financial teaching materials
Count([m:materials], And(financial(m) == False, english(m) == True)) == 10 ::: (3) 10 are non-financial English teaching materials
Count([m:materials], And(financial(m) == False, us_import(m) == True)) == 7 ::: (4) 7 are non-financial teaching materials imported from the United States
Count([m:materials], And(english(m) == False, us_import(m) == False)) == 9 ::: (5) 9 are non-English teaching materials imported from countries outside the United States

# Verifications
is_deduced(Count([m:materials], True) == 30, True) ::: (1) There are 30 kinds of teaching materials in total
is_deduced(Count([m:materials], financial(m) == True) == 12, True) ::: (2) 12 are financial teaching materials
is_deduced(Count([m:materials], And(financial(m) == False, english(m) == True)) == 10, True) ::: (3) 10 are non-financial English teaching materials
is_deduced(Count([m:materials], And(financial(m) == False, us_import(m) == True)) == 7, True) ::: (4) 7 are non-financial teaching materials imported from the United States
is_deduced(Count([m:materials], And(english(m) == False, us_import(m) == False)) == 9, True) ::: (5) 9 are non-English teaching materials imported from countries outside the United States