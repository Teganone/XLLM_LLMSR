# Declarations
candidates = EnumSort([ChengQiang, Julie, LiPing, XueFang])
meets_master = Function([candidates] -> [bool])
meets_english = Function([candidates] -> [bool])
meets_secretarial = Function([candidates] -> [bool])

# Constraints
Count([p:candidates], meets_master(p)==True) == 3 ::: (Each candidate’s final education: exactly three have a master’s degree)
Count([p:candidates], meets_english(p)==True) == 2 ::: (Exactly two are proficient in spoken English)
Count([p:candidates], meets_secretarial(p)==True) == 1 ::: (Exactly one has over two years of secretarial experience)
ForAll([p:candidates], Or(meets_master(p)==True, meets_english(p)==True, meets_secretarial(p)==True)) ::: (Every candidate meets at least one condition)
Not(And(meets_master(ChengQiang)==True, meets_master(Julie)==True)) ::: (1) One of Cheng Qiang and Julie has only attended undergraduate
(meets_master(Julie) == meets_master(XueFang)) ::: (2) Julie and Xue Fang have the same final education
(meets_master(Julie)==True) ::: (2) In view of the count and (1), Julie must have a master’s degree, and hence Xue Fang does as well
(meets_english(LiPing) == meets_english(XueFang)) ::: (3) Li Ping and Xue Fang have similar English conversation skills
(meets_english(Julie)==True) ::: (2) Julie is known to be proficient in spoken English
Count([p:candidates], And(meets_master(p)==True, meets_english(p)==True, meets_secretarial(p)==True)) == 1 ::: (Exactly one candidate meets all three requirements)

# Verifications
is_deduced(Not(And(meets_master(ChengQiang)==True, meets_master(Julie)==True)), True) ::: (1) Neither Cheng Qiang and Julie can both have a master’s degree
is_deduced(And(meets_master(Julie)==True, meets_master(XueFang)==True, meets_english(Julie)==True, meets_english(XueFang)==True), True) ::: (2) Julie and Xue Fang both meet conditions ① and ②
is_deduced(Count([p:candidates], And(meets_master(p)==True, meets_english(p)==True, meets_secretarial(p)==True)) == 1, And(meets_master(XueFang)==True, meets_english(XueFang)==True, meets_secretarial(XueFang)==True)) ::: (3) Xue Fang is the one candidate who meets all three conditions